# Original code from skyedeving and oldmud0
# at https://github.com/AttorneyOnline/AO2-Client/blob/master/.github/workflows/build.yml
name: build

on:
  push:
    branches: [ actions ]
  # pull_request:
  #  branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup workspace
      shell: bash
      working-directory: ${{github.workspace}}/../
      
        # One day, I will get this working without hardcoding a directory...
        # run: |
        #  path=${{github.workspace}}/../
        #  asd=$(echo $path | sed 's/\\/\//g')
        #  echo $asd
        #  echo "parentworkspace=${asd}" >> $GITHUB_ENV
        
      run:
        echo "parentworkspace=${{github.workspace}}/../t" >> $GITHUB_ENV
    - name: Fetch external libs
      run: |
        # QtApng
        curl -L https://github.com/Skycoder42/QtApng/releases/download/1.1.4/qtapng-msvc2017_64-5.14.1.zip -o apng.zip
        unzip apng.zip
        # discord-rpc
        curl -L https://github.com/discordapp/discord-rpc/releases/download/v3.4.0/discord-rpc-win.zip -o discord_rpc_win.zip
        unzip discord_rpc_win.zip
        cp ./discord-rpc/win64-dynamic/lib/discord-rpc.lib ./lib
        # BASS
        curl http://www.un4seen.com/files/bass24.zip -o bass.zip
        unzip bass.zip
        cp ./c/x64/bass.lib ./lib
        # BASS Opus
        curl http://www.un4seen.com/files/bassopus24.zip -o bassopus.zip
        unzip bassopus.zip
        cp ./c/x64/bassopus.lib ./lib
        
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-qt5

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
        cached: ${{steps.cache-qt.outputs.cache-hit}}
        arch: 'win32_mingw73'

    - name: Install AQT
      shell: bash
      working-directory: ${{env.parentworkspace}} 
      run: pip install aqtinstall
        
    - name: Install MinGW
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: aqt tool -O ./Qt windows tools_mingw 7.3.0-1-202004170606 qt.tools.win32_mingw730

    - name: Run qmake
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: ./Qt/5.14.2/mingw73_32/bin/qmake.exe -makefile -o Makefile ./DRO-Client/dronline-client.pro -spec win32-g++ "CONFIG+=qtquickcompiler"    
  
    - name: Run mingw
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        ./Qt/Tools/mingw730_32/bin/mingw32-make.exe -f ./Makefile qmake_all
        ./Qt/Tools/mingw730_32/bin/mingw32-make.exe -j8
                
    # - name: Create Build Environment
    #  run: cmake -E make_directory ${{github.workspace}}/build

    # - name: Configure CMake
    #  shell: bash
    #   working-directory: ${{github.workspace}}/build
    #  run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    # - name: Build
    #  working-directory: ${{github.workspace}}/build
    #  shell: bash
    #  run: cmake --build . --config $BUILD_TYPE --target Danganronpa_Online

    # - name: Deploy
    #  working-directory: ${{github.workspace}}/build/Release
    #  shell: bash
    #  run: |
    #    windeployqt .
    #    cp ../../msvc2017_64/plugins/imageformats/qapng.dll ./imageformats/
    #    cp ../../discord-rpc/win64-dynamic/bin/discord-rpc.dll .
    #    cp ../../x64/bass.dll .
    #    cp ../../x64/bassopus.dll .
    # - name: Upload Artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: Danganronpa_Online
    #    path: ${{github.workspace}}/build/Release/
