# Original code from skyedeving and oldmud0
# at https://github.com/AttorneyOnline/AO2-Client/blob/master/.github/workflows/build.yml
name: build

on:
  push:
    branches: [ actions ]
  # pull_request:
  #  branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup workspace
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        echo "parentworkspace=${{github.workspace}}/.." >> $GITHUB_ENV
        mkdir "3rd"
        mkdir "3rd/include"
        mkdir "3rd/x86"
        echo $PATH
        
    - name: Fetch Discord external library
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        curl -L https://github.com/discordapp/discord-rpc/releases/download/v3.4.0/discord-rpc-win.zip -o discord_rpc_win.zip
        unzip discord_rpc_win.zip
        cp ./discord-rpc/win32-dynamic/include/discord_register.h ./DRO-Client/3rd/include
        cp ./discord-rpc/win32-dynamic/include/discord_rpc.h ./DRO-Client/3rd/include
        cp ./discord-rpc/win32-dynamic/bin/discord-rpc.dll ./DRO-Client/3rd/x86
        cp ./discord-rpc/win32-dynamic/lib/discord-rpc.lib ./DRO-Client/3rd/x86
      
    - name: Fetch Bass external library
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        curl http://www.un4seen.com/files/bass24.zip -o bass.zip
        unzip bass.zip
        cp ./c/bass.h ./DRO-Client/3rd/include
        cp ./bass.dll ./DRO-Client/3rd/x86
        cp ./c/bass.lib ./DRO-Client/3rd/x86
        ls ./DRO-Client/3rd -R
        
    - name: Fetch QtApng external library
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        curl -L https://github.com/Skycoder42/QtApng/releases/download/1.1.4/qtapng-mingw73_32-5.14.1.zip -o apng.zip
        unzip apng.zip
        
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-qt5

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
        cached: ${{steps.cache-qt.outputs.cache-hit}}
        arch: 'win32_mingw73'

    - name: Install AQT
      shell: bash
      working-directory: ${{env.parentworkspace}} 
      run: pip install aqtinstall
        
    - name: Install MinGW
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: aqt tool -O ./Qt windows tools_mingw 7.3.0-1-202004170606 qt.tools.win32_mingw730
      
    - name: Update PATH
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        export PATH=/d/a/DRO-Client/Qt/Tools/mingw730_32/bin:$PATH
        echo $PATH
        ls /d/a/DRO-Client/Qt/Tools/mingw730_32/bin/
        rm -r /c/ProgramData/Chocolatey/lib/mingw/
        
    - name: Run qmake
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        ./Qt/5.14.2/mingw73_32/bin/qmake.exe -makefile -o Makefile ./DRO-Client/dronline-client.pro -spec win32-g++ "CONFIG+=qtquickcompiler"  
        cat ./Makefile
  
    - name: Run MinGW
      shell: bash
      working-directory: ${{env.parentworkspace}}
      run: |
        ./Qt/Tools/mingw730_32/bin/mingw32-make.exe -f ./Makefile qmake_all
        ./Qt/Tools/mingw730_32/bin/mingw32-make.exe -j8
        
    - name: Deploy
      working-directory: ${{github.workspace}}/build/Release
      shell: bash
      run: |
        windeployqt .
        cp ../../mingw73_32/plugins/imageformats/qapng.dll ./imageformats/
        cp ../../discord-rpc/win64-dynamic/bin/discord-rpc.dll .
        cp ../../x64/bass.dll .
   
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
         name: Danganronpa_Online
         path: ${{github.workspace}}/build/Release/
